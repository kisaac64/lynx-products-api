{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.0",
        "title": "Lynx Products API Documentation",
        "description": "Lynx products api allows you to fetch available products in a simple, programmatic way using REST apis.",
        "contact": {
            "name": "500mg support",
            "url": "http://www.example.com/support",
            "email": "support@500mg.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Local development server"
        }
    ],
    "tags": [
        {
            "name": "Products",
            "description": "A product instance contains basic details about every product and also viewed count. \nBy sending requests to the products endpoint, you can list products in sorted manner or fetch a product by id."
        }
    ],
    "paths": {
        "/products": {
            "get": {
                "summary": "List All Products",
                "description": "To list all licenses products from lynx, send a GET request to /products.\n\nThe response body will be a JSON object with a key of products. This will be set to an array containing objects each representing a product.",
                "operationId": "GetProducts",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "Number of product objects returned per page.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 50,
                            "default": 5
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "description": "Type of currency to be used while returning products.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CAD",
                                "USD"
                            ],
                            "default": "USD"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON object with a key of products.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/product"
                                            }
                                        }
                                    },
                                    "required": [
                                        "products"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "500": {
                        "$ref": "#/components/responses/serverError"
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "summary": "Fetch Product By Id",
                "description": "To fetch an existing product, send a GET request to /products/$ID. \n\nThe response body will be a JSON object with a key of product which represents the attributes of the product.",
                "operationId": "GetProductById",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of the product to fetched.",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON object with a key of product.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/product"
                                        }
                                    },
                                    "required": [
                                        "product"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/badRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/notFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/serverError"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150
                    },
                    "price": {
                        "type": "number",
                        "minimum": 1
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150,
                        "nullable": true,
                        "default": null
                    },
                    "isDeleted": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "default": 0
                    },
                    "productViewed": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "price",
                    "description",
                    "isDeleted",
                    "productViewed",
                    "createdDate"
                ],
                "additionalProperties": false
            }
        },
        "responses": {
            "badRequest": {
                "description": "Bad request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "errors"
                            ]
                        }
                    }
                }
            },
            "notFound": {
                "description": "Not found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Resource could not be found."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "serverError": {
                "description": "Server error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Request cannot be processed due to server error."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}